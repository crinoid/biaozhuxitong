#coding=utf8
"""
Django settings for biaozhuxitong project.

Generated by 'django-admin startproject' using Django 1.10.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import sys

reload(sys)
sys.setdefaultencoding('utf8')

# PROJECT_ROOT = os.path.dirname(os.path.dirname(__file__)).decode(sys.getfilesystemencoding()).encode('utf-8')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "frontend/dist/static"),
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6&bgku9h^qdny0ni6texn*96&$2_q^jfl_ty%i8^ejgo2o2q2v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

ADMINS = ('1574904986@qq.com')
SEND_BROKEN_LINK_EMAILS = True
MANAGERS = ADMINS

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST= 'smtp.qq.com'#QQ邮箱SMTP服务器(邮箱需要开通SMTP服务)
EMAIL_PORT= 25 #QQ邮箱SMTP服务端口
EMAIL_HOST_USER = '1574904986@qq.com' #我的邮箱帐号
EMAIL_HOST_PASSWORD = '**************' #授权码
EMAIL_SUBJECT_PREFIX = 'website' #为邮件标题的前缀,默认是'[django]'
EMAIL_USE_TLS = True #开启安全链接
DEFAULT_FROM_EMAIL = SERVER_EMAIL = EMAIL_HOST_USER #设置发件人

CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'mainapp',
    'segment',
    'suggest',
    'management',
    'database',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'biaozhuxitong.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['frontend/dist'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'biaozhuxitong.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '"%(asctime)s - %(name)s - %(levelname)s - %(message)s"',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'f_login': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_login.log',
            'formatter': 'verbose'
        },
        'f_files': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_files.log',
            'formatter': 'verbose'
        },
        'f_seg': { # add segment
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_seg.log',
            'formatter': 'verbose'
        },
        'f_sug': { # add suggest
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_sug.log',
            'formatter': 'verbose'
        },
        'f_category': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_category.log',
            'formatter': 'verbose'
        },
        'f_error': {  # operation error
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/f_error.log',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        # logger name,logging.getLogger(name)
        'login': {
            'handlers': ['f_login'],
            'propagate': True,
            'level': 'INFO',
        },
        'files': {
            'handlers': ['f_files'],
            'propagate': True,
            'level': 'INFO',
        },
        'segment': {
            'handlers': ['f_seg'],
            'propagate': True,
            'level': 'INFO',
        },
        'suggest': {
            'handlers': ['f_sug'],
            'propagate': True,
            'level': 'INFO',
        },
        'category':{
            'handlers': ['f_category'],
            'propagate': True,
            'level': 'INFO'
        },
        'error':{
            'handlers': ['f_error'],
            'propagate': True,
            'level': 'INFO'
        }
    }
}
