{"version":3,"sources":["suggest.js"],"names":[],"mappings":"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","file":"suggest-compiled.js","sourcesContent":["var Suggest = Vue.extend({\n  template: '#suggest',\n\n  data: function () {\n    return {\n      origin_msg: [],\n      //origin_msg: \"\", //当前原文\n      suggests: [], //修改的分词标注,总体,提交用\n      //cur_suggests: [], //当前的分词\n      origin_suggests: [], //原始的分词标注,总体\n      cur_items: [], //当前的一组原文+分词标注,cur_items{\"msg\":..,\"seg\":...}\n      allsuggests: null, //所有标注,标注名:颜色\n      edit_index: \"\", //编辑过的index\n      cur: \"\", //当前选择的分词\n      source: [], //标注来源\n      cur_source: [],\n      save: 0,//选择了当前诊断的所有标注,可以保存(save=1),\n      cur_index: 0,\n      total: 0,\n\n      total_page: 1, //当前分词总共多少页\n      start_page: 1,  //当前起始/终止的页数按钮(如1-10,11-20)\n      page_arr: [],\n      end_page: 0,\n      BUTTON_PER_PAGE: 10, //每页多少个页数按钮\n      ITEM_PER_PAGE: 20, //每页多少个分词\n      select_page: 1, //选择了第几页\n      is_prev: false,\n      is_next: true,\n    }\n  },\n\n  created: function () {\n\n  },\n  mounted: function () {\n    this.getData()\n    vpage.updateStyle(1)\n  },\n  watch: { //默认Vue只在第一次加载初始化，watch用于检测Vue实例的数据是否发生了变化，变化后触发事件\n    '$route'(to, from){\n      db = to.path.split(\"/\")[to.path.split(\"/\").length - 1]\n      this.init(db)\n    }\n  },\n  components: {\n    pg: Page,\n  },\n  methods: {\n    //更新标注类型\n    init: function (db) {\n      var _self = this\n      $.ajax({\n        type: \"post\",\n        url: \"/update_suggests/\",\n        async: false,\n        data: {db: db},\n        success: function (data) {\n          _self.allsuggests = data['all']\n        }\n      })\n    },\n    getData: function () {\n      var url = \"/send_suggest/\";\n      var _self = this;\n\n      $(\"#floatLayer\").show()\n      $(\"#liadloging\").show()\n\n      // var timeout = setTimeout(function () {\n      //     alert(\"连接超时\")\n      //   },\n      //   5000 //超时时间\n      // );\n      //jquery版写法,还有vue-resource版\n      $.ajax({\n        type: \"post\",\n        url: url,\n        data: {\n          db: this.$route.params.id,\n          new_segs: localStorage.getItem(\"new_segs\"),\n          edit_index: localStorage.getItem(\"edit_index\"),\n          origin: localStorage.getItem(\"msg\"),\n        },\n        async: false,\n        success: function (data) {\n\n          // if (timeout) { //清除定时器\n          //   clearTimeout(timeout);\n          //   timeout = null;\n          // }\n\n          vpage.setPageCount(data['page_count'])\n          _self.ITEM_PER_PAGE = data['page_count']\n\n          _self.allsuggests = data['all']\n\n          for (m in data['sug']) {\n            _self.total += 1\n            d = data['sug'][m] //m=分词,d=每个诊断,包含多个分词\n            //console.log(d)\n            tmp = [] //每个数据的分词，注意顺序\n            tmp2 = [] //for origin_suggests\n            // combined_msg = \"\"\n            for (v in d) {\n              // combined_msg += d[v][0]\n              var color = _self.allsuggests[d[v][1]]\n              //e.g.\"高血压\"={}\n              var text_color = \"#000\"\n              if (d[v][1] == \"未知\" || d[v][1] == \"其他\") {\n                text_color = \"#F00\"\n              }\n              // tmp[d[v][0]] = {\"items\": [d[v][1]], \"color\": color, \"selected\": d[v][1], \"text_color\": text_color}\n              // tmp2[d[v][0]] = {\"items\": [d[v][1]], \"color\": color, \"selected\": d[v][1], \"text_color\": text_color}\n              tmp.push([d[v][0], {\"items\": [d[v][1]], \"color\": color, \"selected\": d[v][1], \"text_color\": text_color}])\n              tmp2.push([d[v][0], {\"items\": [d[v][1]], \"color\": color, \"selected\": d[v][1], \"text_color\": text_color}])\n            }\n            _self.suggests.push(tmp)\n            _self.origin_suggests.push(tmp2)\n            // _self.origin_msg.push(combined_msg)\n            if (data['msg']!=\"\")\n              _self.origin_msg=data['msg']\n            else\n              _self.origin_msg=localStorage.getItem(\"msg\").split(\",\")\n\n          }\n          _self.cur_suggests = _self.suggests[0]\n\n          _self.source = data[\"source\"]\n          max = _self.ITEM_PER_PAGE\n          if (max > data[\"source\"].length) {\n            max = data[\"source\"].length\n          }\n          for (i = 0; i < max; i++) {\n            _self.cur_source[i] = data[\"source\"][i]\n          }\n\n          _self.edit_index = new Set()\n\n          _self.total = vutils.jsonLength(_self.origin_suggests)\n          _self.total_page = Math.ceil(vutils.jsonLength(_self.origin_suggests) / _self.ITEM_PER_PAGE)\n          vpage.setStartPage(1)\n          _self.end_page = vpage.getEndPage(_self.total_page)\n\n          _self.page_arr = vpage.updatePageButton()\n          //添加原文\n\n          _self.updateItems(false)\n\n          $(\"#floatLayer\").hide()\n          $(\"#liadloging\").hide()\n        }\n      })\n    },\n    selectSug: function (event) { //点击分词\n\n      $(\"div[name='cut-div']\").each(function (i) {\n        $(this).css(\"border\", \"2px solid whitesmoke\")\n      })\n\n      a = event.target\n      this.cur_index = parseInt($(a).parent().parent().attr(\"id\")) + (this.select_page - 1) * this.ITEM_PER_PAGE\n      par = $(a).parent(\".sug-border\")\n      par.css(\"border\", \"2px solid red\")\n      this.cur = $.trim($(par.children()[0]).text())\n\n    },\n    selectItem: function (event) { //选择标注,添加到分词上\n      a = event.target\n      if ($(a).text() == \"\") {\n        a = $(a).next()\n      }\n      cur_suggests = this.cur_items[this.cur_index % this.ITEM_PER_PAGE][\"sug\"]\n\n      var color = this.allsuggests[$(a).text().trim()]\n\n      for (k in cur_suggests){\n        if (cur_suggests[k][0]==this.cur){\n          Vue.set(cur_suggests[k][1], \"color\", color)\n          Vue.set(cur_suggests[k][1], \"selected\", $(a).text().trim())\n        }\n      }\n\n      // Vue.set(cur_suggests[this.cur], \"color\", color)\n      // Vue.set(cur_suggests[this.cur], \"selected\", $(a).text().trim())\n\n      this.cur_items[this.cur_index][\"sug\"] = cur_suggests\n      //数组/字典需要加上这句更新视图\n      this.cur_items = Object.assign({}, this.cur_items)\n\n      this.edit_index.add(this.cur)\n    },\n    prevPage: function () {\n      if (this.is_prev) {\n        this.page_arr = vpage.prevPage()\n        this.is_prev = vpage.isPrevEnable(this.page_arr[0])\n        this.updatePageItems()\n        this.is_next = true\n      }\n    }\n    ,\n    nextPage: function () {\n      this.page_arr = vpage.nextPage()\n      this.is_prev = vpage.isPrevEnable(this.page_arr[0])\n      this.updatePageItems()\n    }\n    ,\n    updatePageItems(){ //翻页后更新第一页的内容\n      this.select_page = this.page_arr[0]\n      this.updateItems(true)\n    },\n    changePage: function (tar) {\n      this.select_page = parseInt($(tar).text())\n      vpage.changePage(parseInt($(tar).text()))\n      this.updateItems(true)\n      vpage.updateStyle(\"\")\n\n    },\n    updateItems: function (is_post) {\n\n      this.cur_items = {}\n\n      end = this.select_page * this.ITEM_PER_PAGE\n      if (end > vutils.jsonLength(this.suggests)) {\n        end = vutils.jsonLength(this.suggests)\n      }\n\n      // if (is_post) {\n      //   terms = \"\"\n      //   start = (this.select_page - 1) * this.ITEM_PER_PAGE\n      //   // if (this.suggests[start] == \"\") { //第一次进入的页，更新数据\n      //     for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n      //       terms += this.origin_msg[i]\n      //       terms += \";\"\n      //     }\n      //     var _self = this\n      //     $.ajax({\n      //       type: \"post\",\n      //       url: \"/update_sug_source/\",\n      //       async: false,\n      //       data: {terms: terms},\n      //       success: function (data) {\n      //         console.log(data)\n      // start_idx = start\n      // for (d in data['segs']) {\n      //   tmp = []\n      //   for (v in data['segs'][d]) {\n      //     tmp.push(data['segs'][d][v])//index从0开始\n      //   }\n      //   _self.seg_items[start_idx] = tmp\n      //   _self.origin_segs[start_idx] = tmp\n      //   start_idx += 1\n      // }\n      // start_idx = start\n      // for (d in data[\"sources\"]) {\n      //   _self.source[start_idx] = data[\"sources\"][d]\n      //   _self.cur_source[start_idx] = data[\"sources\"][d]\n      //   start_idx += 1\n      // }\n      // }\n      // })\n      // }\n      // }\n\n\n      dic_index = 0\n      for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n        dic = {}\n        dic[\"msg\"] = this.origin_msg[i]\n        dic[\"sug\"] = this.suggests[i]\n        this.cur_items[dic_index] = dic\n        this.cur_source[dic_index] = this.source[i]\n        dic_index++\n      }\n    },\n\n    reset: function (event) {\n      a = event.target\n      this.cur_index = parseInt($(a).attr(\"id\")) + (this.select_page - 1) * this.ITEM_PER_PAGE\n\n      //遍历诊断的每一个分词\n      d = this.cur_items[this.cur_index][\"sug\"] //分词:标注&颜色\n      //console.log(d) //单个分词\n      for (k in d) {\n        //console.log(k)\n        color1 = this.origin_suggests[this.cur_index][k][\"color\"]\n\n        this.cur_items[this.cur_index][\"sug\"][k][\"color\"] = color1\n        var selected = this.origin_suggests[this.cur_index][k][\"selected\"]\n        this.cur_items[this.cur_index][\"sug\"][k][\"selected\"] = selected\n      }\n\n      this.cur_items = vutils.deepCopy(this.cur_items)\n    },\n    saveSuggestion: function () {\n      this.select_page * this.ITEM_PER_PAGE < this.total ? end = this.select_page * this.ITEM_PER_PAGE : end = this.total\n\n      var j = 0\n      for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n        this.suggests[i] = this.cur_items[j][\"sug\"]\n        this.edit_index.add(i)\n        //this.changed_index.add(i)\n        j++\n      }\n      toastr.success(\"保存成功\");\n\n    },\n    submitSuggestion: function () {\n      new_suggests = {}\n      for (i in this.cur_items) {\n        tmp = {}\n        source = \"\" //带有分词标记的术语原文\n        for (j in this.cur_items[i][\"sug\"]) {\n          seg = this.cur_items[i][\"sug\"][j][0]\n          source += seg + \"/\"\n          tmp[seg] = this.cur_items[i][\"sug\"][j][1][\"selected\"]\n        }\n        new_suggests[source] = tmp\n      }\n      //console.log(origin)\n      //console.log(new_suggests)\n      //console.log(this.origin_msg)\n\n      localStorage.setItem(\"success\", 1)\n      var url = \"/save_suggest/\"\n      $.post(url, {sugs: JSON.stringify(new_suggests)}, function (data) {\n\n        app.set_router('/', '')\n      })\n    },\n    is_contain: function (a, b) {\n      return a.indexOf(b)\n    },\n\n  }\n\n})\n"]}