{"version":3,"sources":["segment.js"],"names":[],"mappings":"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","file":"segment-compiled.js","sourcesContent":["var Segment = Vue.extend({\n  template: '#segment',\n  props: ['id'],\n\n  data: function () {\n    return {\n      origin_msg: [], //原始文本\n      seg_items: [], //新的分词(用户修改)\n      cur_items: {}, //当前的文本&分词,一组ITEM_PER_PAGE个,cur_items{\"msg\":..,\"seg\":...}\n      new_cur_items: {}, //用于存储cur_items,deepcopy,\n      origin_segs: [], //原始分词\n      source: [], //分词来源\n      total: 0,\n      cur_source: [],\n\n      edit_index: \"\", //编辑过的index\n      changed_index: \"\", //新添加的编辑index\n      //is_saved: 2, //当前诊断是否保存过 (未编辑,已编辑)\n      //is_editing: 2, //当前诊断是否有修改 (有改动未保存显示*)\n\n      total_page: 1, //当前分词总共多少页\n      start_page: 1,  //当前起始/终止的页数按钮(如1-10,11-20)\n      page_arr: [],\n      end_page: 0,\n      BUTTON_PER_PAGE: 10, //每页多少个页数按钮\n      ITEM_PER_PAGE: 20, //每页多少个分词\n      select_page: 1, //选择了第几页\n      is_prev: false,\n      is_next: true,\n\n      isenable: false\n    }\n  },\n\n  created: function () {\n\n  },\n  mounted: function () {\n    this.getData(this.$route.params.id)\n    vpage.updateStyle(1)\n  },\n  watch: { //默认Vue只在第一次加载初始化，watch用于检测Vue实例的数据是否发生了变化，变化后触发事件\n    '$route'(to, from){\n      db = to.path.split(\"/\")[to.path.split(\"/\").length - 1]\n      this.init(db)\n    }\n  },\n  components: {\n    pg: Page,\n  },\n  methods: {\n    init: function (db) {\n      $.ajax({\n        type: \"post\",\n        url: \"/update_db/\",\n        data: {db: db},\n        success: function (data) {\n\n        }\n      })\n    },\n    getData: function (dbname) {\n\n      var url = \"/send_segment/\";\n      var _self = this;\n\n      $(\"#floatLayer\").show()\n      $(\"#liadloging\").show()\n\n      // var timeout = setTimeout(function () {\n      //     alert(\"连接超时\")\n      //   },\n      //   5000 //超时时间\n      // );\n      $.ajax({\n        type: \"post\",\n        url: url,\n        async: false,\n        data: {\n          msg: localStorage.getItem(\"removed_msg\"),\n          db:dbname\n\n        }, success: function (data) {\n          // if (timeout) { //清除定时器\n          //   clearTimeout(timeout);\n          //   timeout = null;\n          // }\n          //从文件读取,2层字典\n\n          vpage.setPageCount(data['page_count'])\n          _self.ITEM_PER_PAGE = data['page_count']\n\n          _self.edit_index = new Set()\n          _self.changed_index = new Set()\n\n          _self.origin_msg = []\n          for (i in data[\"origin\"]) {\n            _self.origin_msg.push(data[\"origin\"][i])\n            //初始化，全部为空\n            _self.seg_items[i] = \"\"\n            _self.origin_segs[i] = \"\"\n\n            _self.source[i] = \"\"\n            _self.cur_source[i] = \"\"\n          }\n          //第一组数据添加进seg_items\n          i = 0\n          for (d in data['seg']) {\n            tmp = []\n            for (v in data['seg'][d]) {\n              tmp.push(data['seg'][d][v])//index从0开始\n            }\n            _self.seg_items[i] = tmp\n            _self.origin_segs[i] = tmp\n\n            _self.source[i] = data[\"source\"][i]\n            _self.cur_source[i] = data[\"source\"][i]\n\n            i += 1\n          }\n\n          _self.total = data[\"origin\"].length - 1\n          _self.updateItems(false)\n\n          _self.cur_segs = _self.origin_segs[0]\n\n          _self.total = vutils.jsonLength(_self.origin_msg)\n          _self.total_page = Math.ceil(vutils.jsonLength(_self.origin_msg) / _self.ITEM_PER_PAGE)\n\n          _self.end_page = vpage.getEndPage(_self.total_page)\n          _self.page_arr = vpage.updatePageButton()\n          _self.new_cur_items = _self.cur_items\n\n          $(\"#floatLayer\").hide()\n          $(\"#liadloging\").hide()\n\n        }\n      })\n    },\n    cutMerge: function (event) {\n      new_seg = []\n      a = event.target\n      div_id = $(a).parent().attr(\"id\")\n      span_id = $(a).attr(\"id\")\n      //console.log(\"ids\", div_id, span_id)\n      index = parseInt($(a).parent().parent().attr(\"id\"))\n      seg_index = (this.select_page - 1) * this.ITEM_PER_PAGE + index\n      //console.log(index)\n      //每次换页,cur_item会重新赋值\n      //console.log(\"cur_idx\",this.cur_items)\n      cur_seg = this.cur_items[index][\"seg\"]\n      //console.log(\"cur_seg\",cur_seg)\n\n      if ($(a).prev().text()) { //点击的不是第一个,拆分\n        for (k in cur_seg) { //k=0,1,2...\n          new_item = []\n          for (c in cur_seg[k]) {\n            //console.log(cur_seg[k])\n            if (k == div_id && c == span_id) {\n              //console.log(cur_seg[k][c],$.trim($(a).text()))\n              new_seg.push(new_item)\n              new_item = []\n            }\n            new_item.push(cur_seg[k][c])\n\n          }\n          new_seg.push(new_item)\n        }\n        this.cur_items[index][\"seg\"] = new_seg\n\n      } else {\n        leng = 0\n        for (leng in cur_seg) {\n\n        }\n        for (var k = leng; k >= 0;) {\n          if (cur_seg[k][0] == $.trim($(a).text()) && k == div_id) {\n            new_item = []\n            if (k > 0) {\n              for (v in cur_seg[k - 1]) {\n                new_item.push(cur_seg[k - 1][v])\n              }\n            }\n            for (v in cur_seg[k]) {\n              new_item.push(cur_seg[k][v])\n            }\n            k--;\n            k--\n            new_seg.unshift(new_item) //放在数组前面\n          }\n          if (k >= 0) {\n            new_seg.unshift(cur_seg[k])\n            k--\n          }\n\n        }\n        this.cur_items[index][\"seg\"] = new_seg\n        this.seg_items[seg_index] = new_seg\n      }\n      // deepcopy!! Object.assign()是浅拷贝\n      this.cur_items = vutils.deepCopy(this.cur_items)\n\n    },\n    jump: function () {\n      index = $(\"#item_index\").val()\n      this.cur_index = index - 1\n      this.updateItems(true)\n    },\n    prevPage: function () {\n      if (this.is_prev) {\n        this.page_arr = vpage.prevPage()\n        this.is_prev = vpage.isPrevEnable(this.page_arr[0])\n        this.updatePageItems()\n        this.is_next = true\n      }\n    }\n    ,\n    nextPage: function () {\n      this.page_arr = vpage.nextPage()\n      this.is_prev = vpage.isPrevEnable(this.page_arr[0])\n      this.updatePageItems()\n    }\n    ,\n    updatePageItems(){ //翻页后更新第一页的内容\n      this.select_page = this.page_arr[0]\n      this.updateItems(true)\n    },\n    changePage: function (tar) {\n      this.select_page = parseInt($(tar).text())\n      vpage.changePage(parseInt($(tar).text()))\n      this.updateItems(true)\n      vpage.updateStyle(\"\")\n\n    },\n    updateItems: function (is_post) {\n      //切换页面，重新加载分词，分词来源\n      end = this.select_page * this.ITEM_PER_PAGE\n      if (end > vutils.jsonLength(this.origin_msg)) {\n        end = vutils.jsonLength(this.origin_msg)\n      }\n      if (is_post) {\n        terms = \"\"\n        start = (this.select_page - 1) * this.ITEM_PER_PAGE\n        if (this.seg_items[start] == \"\") { //第一次进入的页，更新数据\n          for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n            terms += this.origin_msg[i]\n            terms += \";\"\n          }\n          var _self = this\n          $.ajax({\n            type: \"post\",\n            url: \"/update_seg_source/\",\n            async: false,\n            data: {terms: terms, is_seg: true},\n            success: function (data) {\n              // console.log(data)\n              start_idx = start\n              for (d in data['segs']) {\n                tmp = []\n                for (v in data['segs'][d]) {\n                  tmp.push(data['segs'][d][v])//index从0开始\n                }\n                _self.seg_items[start_idx] = tmp\n                _self.origin_segs[start_idx] = tmp\n                start_idx += 1\n              }\n              start_idx = start\n              for (d in data[\"sources\"]) {\n                _self.source[start_idx] = data[\"sources\"][d]\n                _self.cur_source[start_idx] = data[\"sources\"][d]\n                start_idx += 1\n              }\n            }\n          })\n        }\n      }\n\n      this.cur_items = {}\n      this.cur_source = {}\n\n      dic_index = 0\n      j = 0\n      for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n        dic = {}\n        dic[\"msg\"] = this.origin_msg[i]\n        dic[\"seg\"] = this.seg_items[i]\n        j += 1\n        this.cur_items[dic_index] = dic\n        this.cur_source[dic_index] = this.source[i]\n        dic_index++\n      }\n    },\n    resign: function (event) {\n      a = event.target\n      index = parseInt($(a).attr(\"id\")) + (this.select_page - 1) * this.ITEM_PER_PAGE\n\n      this.cur_segs = this.origin_segs[index]\n      this.cur_items[index][\"seg\"] = this.cur_segs\n      this.cur_items = vutils.deepCopy(this.cur_items)\n      //this.is_editing = 1\n    },\n    saveCuts: function () {\n      this.select_page * this.ITEM_PER_PAGE < this.total ? end = this.select_page * this.ITEM_PER_PAGE : end = this.total\n      var j = 0\n      for (i = (this.select_page - 1) * this.ITEM_PER_PAGE; i < end; i++) {\n        this.seg_items[i] = this.cur_items[j][\"seg\"]\n        this.edit_index.add(i)\n        this.changed_index.add(i)\n        j++\n      }\n      toastr.success(\"保存成功\");\n    },\n    getCuts: function () {\n      if (this.changed_index.size == 0) {\n        alert(\"您还没有保存分词!\")\n        return false\n      }\n      ////这里用edit_index是因为有些已经编辑过了,只考虑没编辑的有没有提交\n      //else if (this.edit_index.size < this.origin_segs.length) {\n      //    if (!window.confirm(\"您还有未完成的分词,确认提交吗?\"))\n      //        return false\n      //}\n\n      new_segs = \"\"\n      for (i = 0; i < this.seg_items.length; i++) {\n        //tmp = []\n        if (this.edit_index.has(i)) {\n          t = \"\"\n          //console.log(i,this.seg_items[i][\"seg\"])\n          for (j in this.seg_items[i]) {\n            //console.log(\"j=\",j,this.segs[i][\"seg\"][j])\n            for (k in this.seg_items[i][j]) {\n              t += this.seg_items[i][j][k]\n              //console.log(k,this.segs[i][\"seg\"][j][k])\n            }\n            t += \",\"\n          }\n          new_segs += t\n          if (t != \"\")\n            new_segs += \";\"\n        }\n      }\n\n      new_msg = []\n      for (i = 0; i < this.origin_msg.length; i++) {\n        if (this.changed_index.has(i)) {\n          new_msg.push(this.origin_msg[i])\n        }\n      }\n\n      new_edit_index = \"\"\n      this.changed_index.forEach(function (element, index, array) {\n        new_edit_index += element\n        new_edit_index += \",\"\n      })\n\n      localStorage.setItem(\"edit_index\", new_edit_index)\n      localStorage.setItem(\"msg\", new_msg)\n      //new_segs:右侧,锁骨下动脉,斑块,形成,;低磷性,骨软化症,;\n      //不同诊断分号隔开\n      localStorage.setItem(\"new_segs\", new_segs) //新的分词,写入数据库用\n\n      $(\"#floatLayer\").show()\n      $(\"#liadloging\").show()\n\n      // app.second_path = \"zhenduan/\"\n      app.set_router(\"suggest/\", \"\")\n\n    },\n  }\n})\n"]}