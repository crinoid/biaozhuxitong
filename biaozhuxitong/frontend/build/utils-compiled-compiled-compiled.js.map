{"version":3,"sources":["utils-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,MAA2B,qCAA3B;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,oBAAoB,QAAQ,6BAAR,CAAxB;;AAEA,QAAQ,UAAR,GAAqB,UAAU,KAAV,EAAiB;AACpC,MAAI,qBAAqB,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,OAAO,KAAP,CAAa,kBAArD,GAA0E,OAAO,GAAP,CAAW,kBAA9G;AACA,SAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,kBAAhB,EAAoC,KAApC,CAAP;AACD,CAHD;;AAKA,QAAQ,UAAR,GAAqB,UAAU,OAAV,EAAmB;AACtC,YAAU,WAAW,EAArB;;AAEA,MAAI,YAAY;AACd,YAAQ,YADM;AAEd,aAAS;AACP,gBAAU,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAD5B;AAEP,iBAAW,QAAQ;;AAEnB;AAJO,KAFK,EAAhB,CAOM,SAAS,eAAT,CAAyB,MAAzB,EAAiC,aAAjC,EAAgD;AACpD,QAAI,UAAU,CAAC,SAAD,CAAd;AACA,QAAI,MAAJ,EAAY;AACV,cAAQ,IAAR,CAAa;AACX,gBAAQ,SAAS,SADN;AAEX,iBAAS,eAAe,EAAf,EAAmB,aAAnB,EAAkC;AACzC,qBAAW,QAAQ;AADsB,SAAlC;AAFE,OAAb;AAMD;;AAED;AACA;AACA,QAAI,QAAQ,OAAZ,EAAqB;AACnB,aAAO,kBAAkB,OAAlB,CAA0B;AAC/B,aAAK,OAD0B;AAE/B,kBAAU;AAFqB,OAA1B,CAAP;AAID,KALD,MAKO;AACL,aAAO,CAAC,kBAAD,EAAqB,MAArB,CAA4B,OAA5B,CAAP;AACD;AACF;;AAED;AACA,SAAO;AACL,SAAK,iBADA;AAEL,aAAS,iBAFJ;AAGL,UAAM,gBAAgB,MAAhB,CAHD;AAIL,UAAM,gBAAgB,MAAhB,EAAwB,EAAE,gBAAgB,IAAlB,EAAxB,CAJD;AAKL,UAAM,gBAAgB,MAAhB,CALD;AAML,YAAQ,gBAAgB,QAAhB,CANH;AAOL,UAAM,gBAAgB,QAAhB;AAPD,GAAP;AASD,CA3CD;;AA6CA;AACA,QAAQ,YAAR,GAAuB,UAAU,OAAV,EAAmB;AACxC,MAAI,SAAS,EAAb;AACA,MAAI,UAAU,QAAQ,UAAR,CAAmB,OAAnB,CAAd;AACA,OAAK,IAAI,SAAT,IAAsB,OAAtB,EAA+B;AAC7B,QAAI,SAAS,QAAQ,SAAR,CAAb;AACA,WAAO,IAAP,CAAY;AACV,YAAM,IAAI,MAAJ,CAAW,QAAQ,SAAR,GAAoB,GAA/B,CADI;AAEV,WAAK;AAFK,KAAZ;AAID;AACD,SAAO,MAAP;AACD,CAXD;;AAaA;;AAEA","file":"utils-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nimport _Object$assign from 'babel-runtime/core-js/object/assign';\nvar path = require('path');\nvar config = require('../config');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production' ? config.build.assetsSubDirectory : config.dev.assetsSubDirectory;\n  return path.posix.join(assetsSubDirectory, _path);\n};\n\nexports.cssLoaders = function (options) {\n  options = options || {};\n\n  var cssLoader = {\n    loader: 'css-loader',\n    options: {\n      minimize: process.env.NODE_ENV === 'production',\n      sourceMap: options.sourceMap\n\n      // generate loader string to be used with extract text plugin\n    } };function generateLoaders(loader, loaderOptions) {\n    var loaders = [cssLoader];\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: _Object$assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      });\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      });\n    } else {\n      return ['vue-style-loader'].concat(loaders);\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  };\n};\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = [];\n  var loaders = exports.cssLoaders(options);\n  for (var extension in loaders) {\n    var loader = loaders[extension];\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    });\n  }\n  return output;\n};\n\n//# sourceMappingURL=utils-compiled.js.map\n\n//# sourceMappingURL=utils-compiled-compiled.js.map"]}