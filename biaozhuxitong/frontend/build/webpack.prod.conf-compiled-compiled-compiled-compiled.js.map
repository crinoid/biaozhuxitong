{"version":3,"sources":["webpack.prod.conf-compiled-compiled-compiled.js"],"names":[],"mappings":"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","file":"webpack.prod.conf-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar utils = require('./utils');\nvar webpack = require('webpack');\nvar config = require('../config');\nvar merge = require('webpack-merge');\nvar baseWebpackConfig = require('./webpack.base.conf');\nvar CopyWebpackPlugin = require('copy-webpack-plugin');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin');\n\nvar env = config.build.env;\n\nvar webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? '#source-map' : false,\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n  // http://vuejs.github.io/vue-loader/en/workflow/production.html\n  new webpack.DefinePlugin({\n    'process.env': env\n  }),\n  // UglifyJs do not support ES6+, you can also use babel-minify for better treeshaking: https://github.com/babel/minify\n  new webpack.optimize.UglifyJsPlugin({\n    compress: {\n      warnings: false\n    },\n    sourceMap: true\n  }),\n  // extract css into its own file\n  new ExtractTextPlugin({\n    filename: utils.assetsPath('css/[name].[contenthash].css')\n  }),\n  // Compress extracted CSS. We are using this plugin so that possible\n  // duplicated CSS from different components can be deduped.\n  new OptimizeCSSPlugin({\n    cssProcessorOptions: {\n      safe: true\n    }\n  }),\n  // generate dist index.html with correct asset hash for caching.\n  // you can customize output by editing /index.html\n  // see https://github.com/ampedandwired/html-webpack-plugin\n  new HtmlWebpackPlugin({\n    filename: config.build.index,\n    template: 'index.html',\n    inject: true,\n    minify: {\n      removeComments: true,\n      collapseWhitespace: true,\n      removeAttributeQuotes: true\n      // more options:\n      // https://github.com/kangax/html-minifier#options-quick-reference\n    },\n    // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n    chunksSortMode: 'dependency'\n  }),\n  // keep module.id stable when vender modules does not change\n  new webpack.HashedModuleIdsPlugin(),\n  // split vendor js into its own file\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'vendor',\n    minChunks: function minChunks(module) {\n      // any required modules inside node_modules are extracted to vendor\n      return module.resource && /\\.js$/.test(module.resource) && module.resource.indexOf(path.join(__dirname, '../node_modules')) === 0;\n    }\n  }),\n  // extract webpack runtime and module manifest to its own file in order to\n  // prevent vendor hash from being updated whenever app bundle is updated\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'manifest',\n    chunks: ['vendor']\n  }),\n  // copy custom static assets\n  new CopyWebpackPlugin([{\n    from: path.resolve(__dirname, '../static'),\n    to: config.build.assetsSubDirectory,\n    ignore: ['.*']\n  }])]\n});\n\nif (config.build.productionGzip) {\n  var CompressionWebpackPlugin = require('compression-webpack-plugin');\n\n  webpackConfig.plugins.push(new CompressionWebpackPlugin({\n    asset: '[path].gz[query]',\n    algorithm: 'gzip',\n    test: new RegExp('\\\\.(' + config.build.productionGzipExtensions.join('|') + ')$'),\n    threshold: 10240,\n    minRatio: 0.8\n  }));\n}\n\nif (config.build.bundleAnalyzerReport) {\n  var BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin());\n}\n\nmodule.exports = webpackConfig;\n\n//# sourceMappingURL=webpack.prod.conf-compiled.js.map\n\n//# sourceMappingURL=webpack.prod.conf-compiled-compiled.js.map\n\n//# sourceMappingURL=webpack.prod.conf-compiled-compiled-compiled.js.map"]}