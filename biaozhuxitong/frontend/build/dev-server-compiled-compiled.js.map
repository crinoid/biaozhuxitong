{"version":3,"sources":["dev-server-compiled.js"],"names":[],"mappings":"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","file":"dev-server-compiled-compiled.js","sourcesContent":["'use strict';\n\nimport _Promise from 'babel-runtime/core-js/promise';\nimport _Object$keys from 'babel-runtime/core-js/object/keys';\nrequire('./check-versions')();\n\nvar config = require('../config');\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = JSON.parse(config.dev.env.NODE_ENV);\n}\n\nvar opn = require('opn');\nvar path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar proxyMiddleware = require('http-proxy-middleware');\nvar webpackConfig = require('./webpack.dev.conf');\n\n// default port where dev server listens for incoming traffic\nvar port = process.env.PORT || config.dev.port;\n// automatically open browser, if not set will be false\nvar autoOpenBrowser = !!config.dev.autoOpenBrowser;\n// Define HTTP proxies to your custom API backend\n// https://github.com/chimurai/http-proxy-middleware\nvar proxyTable = config.dev.proxyTable;\n\nvar app = express();\nvar compiler = webpack(webpackConfig);\n\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  quiet: true\n});\n\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  log: false,\n  heartbeat: 2000\n});\n// force page reload when html-webpack-plugin template changes\n// currently disabled until this is resolved:\n// https://github.com/jantimon/html-webpack-plugin/issues/680\n// compiler.plugin('compilation', function (compilation) {\n//   compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n//     hotMiddleware.publish({ action: 'reload' })\n//     cb()\n//   })\n// })\n\n// enable hot-reload and state-preserving\n// compilation error display\napp.use(hotMiddleware);\n\n// proxy api requests\n_Object$keys(proxyTable).forEach(function (context) {\n  var options = proxyTable[context];\n  if (typeof options === 'string') {\n    options = { target: options };\n  }\n  app.use(proxyMiddleware(options.filter || context, options));\n});\n\n// handle fallback for HTML5 history API\napp.use(require('connect-history-api-fallback')());\n\n// serve webpack bundle output\napp.use(devMiddleware);\n\n// serve pure static assets\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory);\napp.use(staticPath, express.static('./static'));\n\nvar uri = 'http://localhost:' + port;\n\nvar _resolve;\nvar _reject;\nvar readyPromise = new _Promise(function (resolve, reject) {\n  _resolve = resolve;\n  _reject = reject;\n});\n\nvar server;\nvar portfinder = require('portfinder');\nportfinder.basePort = port;\n\nconsole.log('> Starting dev server...');\ndevMiddleware.waitUntilValid(function () {\n  portfinder.getPort(function (err, port) {\n    if (err) {\n      _reject(err);\n    }\n    process.env.PORT = port;\n    var uri = 'http://localhost:' + port;\n    console.log('> Listening at ' + uri + '\\n');\n    // when env is testing, don't need open it\n    if (autoOpenBrowser && process.env.NODE_ENV !== 'testing') {\n      opn(uri);\n    }\n    server = app.listen(port);\n    _resolve();\n  });\n});\n\nmodule.exports = {\n  ready: readyPromise,\n  close: function close() {\n    server.close();\n  }\n};\n\n//# sourceMappingURL=dev-server-compiled.js.map"]}